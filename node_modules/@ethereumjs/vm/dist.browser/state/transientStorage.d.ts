/// <reference types="node" />
import { Address } from 'ethereumjs-util';
export declare type TStorage = Map<string, Map<string, Buffer>>;
export interface TransientStorageModification {
    addr: Address;
    key: Buffer;
    prevValue: Buffer;
}
export declare type Changeset = TStorage;
export interface TransientStorageOptions {
    storage?: TStorage;
    changesets?: Changeset[];
}
export default class TransientStorage {
    _storage: TStorage;
    _changesets: Changeset[];
    constructor(opts?: TransientStorageOptions);
    private get latestChangeset();
    private recordModification;
    get(addr: Address, key: Buffer): Buffer;
    put(addr: Address, key: Buffer, value: Buffer): void;
    revert(): void;
    commit(): void;
    checkpoint(): void;
    toJSON(): {
        [address: string]: {
            [key: string]: string;
        };
    };
    clear(): void;
    copy(): TransientStorage;
}
